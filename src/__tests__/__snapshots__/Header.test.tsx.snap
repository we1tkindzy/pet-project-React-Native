// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should renders Header component 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#D9B597",
      "borderBottomLeftRadius": 15,
      "borderBottomRightRadius": 15,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "marginBottom": 20,
      "padding": 10,
      "width": "100%",
    }
  }
>
  <View
    style={
      {
        "marginLeft": "auto",
        "width": "40%",
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#B6846B",
          "borderRadius": 25,
          "opacity": 1,
          "paddingHorizontal": 10,
          "paddingVertical": 5,
        }
      }
    >
      <Text
        style={
          [
            {
              "textAlign": "center",
            },
            {
              "color": "#ffffff",
            },
          ]
        }
      >
        dark theme
      </Text>
    </View>
  </View>
</View>
`;

exports[`should renders Header component with Back button 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#D9B597",
      "borderBottomLeftRadius": 15,
      "borderBottomRightRadius": 15,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "marginBottom": 20,
      "padding": 10,
      "width": "100%",
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
            {
              "color": "#371005",
            },
          ]
        }
      >
        Go back
      </Text>
    </View>
  </View>
  <View
    style={
      {
        "marginLeft": "auto",
        "width": "40%",
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#B6846B",
          "borderRadius": 25,
          "opacity": 1,
          "paddingHorizontal": 10,
          "paddingVertical": 5,
        }
      }
    >
      <Text
        style={
          [
            {
              "textAlign": "center",
            },
            {
              "color": "#ffffff",
            },
          ]
        }
      >
        dark theme
      </Text>
    </View>
  </View>
</View>
`;
